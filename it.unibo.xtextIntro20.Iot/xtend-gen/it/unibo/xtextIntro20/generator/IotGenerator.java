/**
 * generated by Xtext 2.18.0.M3
 */
package it.unibo.xtextIntro20.generator;

import com.google.common.collect.Iterables;
import it.unibo.xtextIntro20.generator.GenIotSystem;
import it.unibo.xtextIntro20.generator.GenUtils;
import it.unibo.xtextIntro20.iot.IotSystem;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class IotGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    this.mygenerate(resource, fsa, context);
  }
  
  public void mygenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    GenUtils.setFsa(fsa);
    GenUtils.setFileExtension(resource.getURI().fileExtension());
    String _fileExtension = resource.getURI().fileExtension();
    String _plus = ("fileExtension=" + _fileExtension);
    System.out.println(_plus);
    Iterable<IotSystem> _filter = Iterables.<IotSystem>filter(IteratorExtensions.<EObject>toIterable(resource.getAllContents()), IotSystem.class);
    for (final IotSystem system : _filter) {
      new GenIotSystem().doGenerate(system);
    }
  }
}
