/* Generated by AN DISI Unibo */ 
package it.unibo.robotusage

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Robotusage ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("robotusage start")
					}
					 transition( edgeName="goto",targetState="simulateTemperature", cond=doswitch() )
				}	 
				state("simulateTemperature") { //this:State
					action { //it:State
						delay(1000) 
						println("robotusage send w")
						forward("cmd", "cmd(w)" ,"basicrobot" ) 
						delay(1500) 
						println("robotusage simulates temperature(42)")
						emit("temperature", "temperature(42)" ) 
					}
					 transition(edgeName="t00",targetState="handleObstacle",cond=whenEvent("obstacle"))
					transition(edgeName="t01",targetState="handleHelp",cond=whenEvent("help"))
				}	 
				state("handleHelp") { //this:State
					action { //it:State
						println("robotusage handles help (from basicrobot)")
						println("$name in ${currentState.stateName} | $currentMsg")
						if( checkMsgContent( Term.createTerm("help(REASON)"), Term.createTerm("help(reduce_temperature)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								delay(1500) 
								println("robotusage simulates temperature(25)")
								emit("temperature", "temperature(25)" ) 
						}
						delay(1500) 
						println("robotusage move the robot")
						forward("cmd", "cmd(a)" ,"basicrobot" ) 
						delay(600) 
						forward("cmd", "cmd(d)" ,"basicrobot" ) 
						delay(600) 
						forward("cmd", "cmd(h)" ,"basicrobot" ) 
					}
				}	 
				state("handleObstacle") { //this:State
					action { //it:State
						println("robotusage handleObstacle ... but looses help???")
					}
					 transition(edgeName="t02",targetState="handleHelp",cond=whenEvent("help"))
				}	 
			}
		}
}
