/*
 */

System basicrobot 

Dispatch cmd          : cmd(X) // X = w | s | a ... 
Event  sonarRobot     : sonar( DISTANCE )	     //from  sonar on robot 
Event  sonar          : sonar(SONAR, DISTANCE)	 //from sonar in the robot environment   

Context ctxBasicRobot   ip [ host= "localhost"   port= 8020 ] 
 
QActor basicrobot context ctxBasicRobot {
	State s0 initial {
		//run itunibo.robotVirtual.clientWenvObjTcp.initClientConn( myself )
 		println ( "robot ready" )
	}
	Goto work
	State work{
		
	}	
	Transition t0 whenMsg cmd -> handleCmd

	State handleCmd{
 		printCurrentMessage
		onMsg ( cmd : cmd(X) ) { 
			println("do  the move: ${payloadArg(0)}")
			//run itunibo.robcmd.robotState.robotMove(payloadArg(0))					//change the model
			//run itunibo.robotVirtual.clientWenvObjTcp.sendMsg( payloadArg(0 )   )	//activate motors
		}
 	}
	Goto work
}

 QActor sonarhandler context ctxBasicRobot{    
  	State init initial{
		println("sonarhandler STARTS ... ")
	}         
	Goto waitForEvents 
	   
 	State waitForEvents{  }      
   	Transition t0 whenEvent sonarRobot -> handleSonar //to test modeReact(model). See mbotSupport
 	State handleSonar{
 		printCurrentMessage
  	}
 	Goto waitForEvents
 }
