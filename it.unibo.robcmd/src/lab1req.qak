/*
 * Questo file descrive UNA rapprsentazione testuale di UN modello del sistema
 * espresso nel linguaggio / metamodello qak
 * come risultato della analisi dei requisiti.
 * 
 * Il modello descrive l'archittura logica del sistema in termini di
 * 
 * 	struttura
 * 	interazione
 * 	comportamento 
 * 
 * dei sui componenti
 */

System robcmd 

Dispatch cmd : cmd(X) // X = w | s | a ... 

//Context ctxRobcmd ip [ host= "localhost" port= 8020 ] 
Context ctxRobot   ip [ host= "localhost"   port= 8020 ] 
Context ctxConsole ip [ host= "localhost"   port= 8030 ] 

QActor console context ctxConsole {       
	State s0 initial {
		println ( "hello from console" )
		forward robot -m cmd : cmd( w )   
 		delay 1000
		forward robot -m cmd : cmd( h )   
	}   
}

QActor robot context ctxRobot {
	State s0 initial {
		//println ( "robot ready" )
	}
	Transition t0 whenMsg cmd -> handleCmd
	
	State handleCmd{
 		printCurrentMessage
		onMsg ( cmd : cmd(w) ) { 
			run itunibo.robcmd.robotState.robotGoingForward()		
			println("the robot must execute ${payloadArg(0)}")	 
		}
 	}
	Goto s0
}